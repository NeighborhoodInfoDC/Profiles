1                                         The SAS System           17:04 Wednesday, April 16, 2014

NOTE: Copyright (c) 2002-2008 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.2 (TS2M3) 
      Licensed to THE URBAN INSTITUTE, Site 70097024.
NOTE: This session is executing on the X64_VSPRO  platform.



NOTE: SAS initialization used:
      real time           4.34 seconds
      cpu time            0.31 seconds
      

NOTE: AUTOEXEC processing beginning; file is D:\Personal Settings\My SAS Files\V9\Autoexnt.sas.


NOTE: AUTOEXEC processing completed.

1          /**************************************************************************
2           Program:  Print_templates.sas
3           Library:  Profiles
4           Project:  NeighborhoodInfo DC
5           Author:   P. Tatian
6           Created:  04/16/14
7           Version:  SAS 9.2
8           Environment:  Local Windows session (desktop)
9          
10          Description:
11         
12          Modifications:
13         **************************************************************************/
14         
15         %include "L:\SAS\Inc\StdLocal.sas";
NOTE: Libref _METADAT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: L:\Libraries\Metadata\Data
58        +
59        +options ls=124 ps=48;    ** Landscape **;
60        +
61        +** Output title **;
62        +
63        +title "&_library/&_program:  NeighborhoodInfo DC";
64        +
65        +** Define General library for local session only **;
66        +
67        +%DCData_lib( General, env=windows, macdef=dcautos uiautos sasautos )
MPRINT(DCDATA_LIB):   options nomprint;
2 The SAS System                                                                             17:04 Wednesday, April 16, 2014

NOTE: Libref GENERA_L was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: D:\DCData\Libraries\General\Data
NOTE: Libref GENERA_R was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: L:\Libraries\General\Data
NOTE: Libref GENERAL was successfully assigned as follows: 
      Levels:           2
      Engine(1):        V9 
      Physical Name(1): D:\DCData\Libraries\General\Data
      Engine(2):        V9 
      Physical Name(2): L:\Libraries\General\Data

=====================================================================
Current FmtSearch Option value:

     WORK* LIBRARY* GENERAL

   *implicitly included by default.

=====================================================================
Status of current catalogs:

NOTE:    WORK.FORMATS DOES NOT EXIST
NOTE:    LIBRARY.FORMATS DOES NOT EXIST
NOTE:    GENERAL.FORMATS EXISTS
=====================================================================


=====================================================================
Current Sasautos Option value:

     GENERA_L DCAUTOS UIAUTOS SASAUTOS

=====================================================================


=====================================================================
Current Sasautos Option value:

     GENERA_L  GENERA_R DCAUTOS UIAUTOS SASAUTOS

=====================================================================

68        +
69        +%let _userid = %sysfunc( putc( %lowcase(&SYSUSERID), $longusr. ) );
3 The SAS System                                                                             17:04 Wednesday, April 16, 2014

NOTE: %INCLUDE (level 1) ending.
70         
71         ** Define libraries **;
72         %DCData_lib( Profiles, local=n )
MPRINT(DCDATA_LIB):   options nomprint;
NOTE: Libref PROFIL_R was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: L:\Libraries\Profiles\Data
NOTE: Libref PROFILES was successfully assigned as follows: 
      Levels:           1
      Engine(1):        V9 
      Physical Name(1): L:\Libraries\Profiles\Data

=====================================================================
Current FmtSearch Option value:

     WORK* LIBRARY* GENERAL PROFILES

   *implicitly included by default.

=====================================================================
Status of current catalogs:

NOTE:    WORK.FORMATS DOES NOT EXIST
NOTE:    LIBRARY.FORMATS DOES NOT EXIST
NOTE:    GENERAL.FORMATS EXISTS
NOTE:    PROFILES.FORMATS DOES NOT EXIST
=====================================================================


=====================================================================
Current Sasautos Option value:

     PROFIL_R GENERA_L GENERA_R DCAUTOS UIAUTOS SASAUTOS

=====================================================================

73         
74         %Style_profile_xhtml()
WARNING: Argument 1 to function TRANSLATE referenced by the %SYSFUNC or %QSYSFUNC macro function is out of range.
MPRINT(STYLE_PROFILE_XHTML):   ** Create profileXHTML tagset **;
MPRINT(STYLE_PROFILE_XHTML):   proc template;
MPRINT(STYLE_PROFILE_XHTML):   path sashelp.tmplmst;
MPRINT(STYLE_PROFILE_XHTML):   define tagset tagsets.profileXHTML /store=sasuser.templat (write);
MPRINT(STYLE_PROFILE_XHTML):   parent = Tagsets.Xhtml;
MPRINT(STYLE_PROFILE_XHTML):   define event doc_head;
4 The SAS System                                                                             17:04 Wednesday, April 16, 2014

MPRINT(STYLE_PROFILE_XHTML):   start: put "<head>" NL;
MPRINT(STYLE_PROFILE_XHTML):   put VALUE NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<meta name=""Robots"" content=""INDEX"" />" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<meta name=""geo.region"" content=""US-DC"" />" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<meta name=""geo.placename"" content=""Washington"" />" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<meta name=""geo.position"" content=""38.895112;-77.036366"" />" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<meta name=""ICBM"" content=""38.895112, -77.036366"" />" NL;
MPRINT(STYLE_PROFILE_XHTML):   finish: put NL "<!-- Google Analytics code -->" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<script type=""text/javascript"">" NL;
MPRINT(STYLE_PROFILE_XHTML):   put NL;
MPRINT(STYLE_PROFILE_XHTML):   put "  var _gaq = _gaq || [];" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "  _gaq.push(['_setAccount', 'UA-7017847-1']);" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "  _gaq.push(['_trackPageview']);" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "  (function() {" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = 
true;" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + 
'.google-analytics.com/ga.js';" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, 
s);" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "  })();" NL;
MPRINT(STYLE_PROFILE_XHTML):   put NL;
MPRINT(STYLE_PROFILE_XHTML):   put "</script>" NL;
MPRINT(STYLE_PROFILE_XHTML):   put NL;
MPRINT(STYLE_PROFILE_XHTML):   put "</head>" NL;
MPRINT(STYLE_PROFILE_XHTML):   end;
MPRINT(STYLE_PROFILE_XHTML):   define event doc;
MPRINT(STYLE_PROFILE_XHTML):   start: set $empty_tag_suffix " /";
MPRINT(STYLE_PROFILE_XHTML):   set $doctype "<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""" "    
""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">";
MPRINT(STYLE_PROFILE_XHTML):   set $framedoctype "<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Frameset//EN"">";
MPRINT(STYLE_PROFILE_XHTML):   put $doctype NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<html xmlns=""http://www.w3.org/1999/xhtml"">" NL;
MPRINT(STYLE_PROFILE_XHTML):   finish: put "</html>" NL;
MPRINT(STYLE_PROFILE_XHTML):   end;
MPRINT(STYLE_PROFILE_XHTML):   define event contents;
MPRINT(STYLE_PROFILE_XHTML):   start: put $doctype NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<html xmlns=""http://www.w3.org/1999/xhtml"">" NL;
MPRINT(STYLE_PROFILE_XHTML):   finish: put "</html>" NL;
MPRINT(STYLE_PROFILE_XHTML):   end;
MPRINT(STYLE_PROFILE_XHTML):   define event doc_body;
MPRINT(STYLE_PROFILE_XHTML):   put "<body onload=""startup()""";
MPRINT(STYLE_PROFILE_XHTML):   put " onunload=""shutdown()""";
MPRINT(STYLE_PROFILE_XHTML):   put " bgproperties=""fixed""" / WATERMARK;
MPRINT(STYLE_PROFILE_XHTML):   putq " background=" BACKGROUNDIMAGE;
5 The SAS System                                                                             17:04 Wednesday, April 16, 2014

MPRINT(STYLE_PROFILE_XHTML):   trigger style_inline;
MPRINT(STYLE_PROFILE_XHTML):   put ">" NL;
MPRINT(STYLE_PROFILE_XHTML):   trigger pre_post;
MPRINT(STYLE_PROFILE_XHTML):   put NL;
MPRINT(STYLE_PROFILE_XHTML):   trigger ie_check;
MPRINT(STYLE_PROFILE_XHTML):   put "<div id=""container"">" NL;
MPRINT(STYLE_PROFILE_XHTML):   put NL "<!-- BANNER AND NAV BAR -->" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<div id=""banner"" title=""NeighborhoodInfo DC"">";
MPRINT(STYLE_PROFILE_XHTML):   put "<a href=""../index.html"">";
MPRINT(STYLE_PROFILE_XHTML):   put "<img src=""../images/neighborhoodinfodc.gif"" width=""920"" height=""88"" 
alt=""NeighorhoodInfo DC banner""/></a></div>";
MPRINT(STYLE_PROFILE_XHTML):   put "<div id=""navbar"" style=""background-color: #c98d95"">";
MPRINT(STYLE_PROFILE_XHTML):   put "<a href=""../index.html"">Home</a>";
MPRINT(STYLE_PROFILE_XHTML):   put "<a href=""../about.html"">About Us</a>";
MPRINT(STYLE_PROFILE_XHTML):   put "<a href=""../profiles.html"" class=""highlight"">Neighborhood Profiles</a>";
MPRINT(STYLE_PROFILE_XHTML):   put "<a href=""../Housing/index.html"">Housing</a>";
MPRINT(STYLE_PROFILE_XHTML):   put "<a href=""../maps.html"">Maps</a>";
MPRINT(STYLE_PROFILE_XHTML):   put "<a href=""../resources.html"">Resources</a>";
MPRINT(STYLE_PROFILE_XHTML):   put "<a href=""../Maryland/index.html"">Maryland</a>";
MPRINT(STYLE_PROFILE_XHTML):   put "<a href=""../Questions.html"" class=""no_pipe"">Ask a Question</a>";
MPRINT(STYLE_PROFILE_XHTML):   put "</div>" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<div class=""branch"" style=""padding-left:10px"">" NL;
MPRINT(STYLE_PROFILE_XHTML):   finish: put "<div id=""footer"" align=""center"" style=""margin:0; padding:0; "">" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<div style=""background-color:#c98d95; padding: 12px 0; font-weight: bold;"">" NL;
MPRINT(STYLE_PROFILE_XHTML):   put ' Neighborhood Info DC &mdash;a project of The Urban Institute and Washington DC Local 
Initiatives Support Corporation (LISC)<br />' NL;
MPRINT(STYLE_PROFILE_XHTML):   put "P: 202-261-5760 / E: <a 
href=""mailto:info@neighborhoodinfodc.org"">info@neighborhoodinfodc.org</a> </div>" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<table width=""50%"" border=""0"" align=""center"" cellpadding=""4"" 
cellspacing=""0"">" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<tr valign=""top"">" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<td width=""50%"" align=""center"">" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<a href=""http://www.urban.org""><img src=""../images/UI-logo-small.png"" alt=""Urban 
Institute logo"" width=""130"" height=""38"" border=""0"" /></a><br />" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "    2100 M Street, NW<br />" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "    Washington, DC 20037</td>" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "<td width=""50%"" align=""center"">" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "  <a href=""http://www.lisc.org/washingtondc/""><img src=""../images/LISC.png"" 
alt=""LISC logo"" width=""66"" height=""37"" border=""0"" /></a><br />" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "    1825 K Street NW Suite 1100<br />" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "    Washington, DC 20006</td>" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "</tr>" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "</table>" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "  </div>" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "</div>" NL;
MPRINT(STYLE_PROFILE_XHTML):   put "</div>" NL;
6 The SAS System                                                                             17:04 Wednesday, April 16, 2014

MPRINT(STYLE_PROFILE_XHTML):   put "</div>" NL;
MPRINT(STYLE_PROFILE_XHTML):   trigger pre_post;
MPRINT(STYLE_PROFILE_XHTML):   put "</body>" NL;
MPRINT(STYLE_PROFILE_XHTML):   end;
MPRINT(STYLE_PROFILE_XHTML):   define event data;
MPRINT(STYLE_PROFILE_XHTML):   start: put "<td";
MPRINT(STYLE_PROFILE_XHTML):   putq " id=" HTMLID;
MPRINT(STYLE_PROFILE_XHTML):   putq " headers=" headers /if $header_data_associations;
MPRINT(STYLE_PROFILE_XHTML):   trigger rowcol;
MPRINT(STYLE_PROFILE_XHTML):   trigger align;
MPRINT(STYLE_PROFILE_XHTML):   put " nowrap=""nowrap""" /if no_wrap;
MPRINT(STYLE_PROFILE_XHTML):   put ">";
MPRINT(STYLE_PROFILE_XHTML):   trigger cell_value;
MPRINT(STYLE_PROFILE_XHTML):   finish: trigger cell_value;
MPRINT(STYLE_PROFILE_XHTML):   put "</td>" NL;
MPRINT(STYLE_PROFILE_XHTML):   end;
MPRINT(STYLE_PROFILE_XHTML):   end;
NOTE: TAGSET 'Tagsets.profileXHTML' has been saved to: SASUSER.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(STYLE_PROFILE_XHTML):   run;
75         
76         proc template;
77           path sashelp.tmplmst;
78         
79           source tagsets.profileXHTML /store=sasuser.templat;
define tagset Tagsets.profileXHTML / store = SASUSER.TEMPLAT;

   define event doc_head;
      start:
         put "<head>" NL;
         put VALUE NL;
         put "<meta name=""Robots"" content=""INDEX"" />" NL;
         put "<meta name=""geo.region"" content=""US-DC"" />" NL;
         put "<meta name=""geo.placename"" content=""Washington"" />" NL;
         put "<meta name=""geo.position"" content=""38.895112;-77.036366"" />" NL;
         put "<meta name=""ICBM"" content=""38.895112, -77.036366"" />" NL;

      finish:
         put NL "<!-- Google Analytics code -->" NL;
         put "<script type=""text/javascript"">" NL;
         put NL;
         put "  var _gaq = _gaq || [];" NL;
7 The SAS System                                                                             17:04 Wednesday, April 16, 2014

         put "  _gaq.push(['_setAccount', 'UA-7017847-1']);" NL;
         put "  _gaq.push(['_trackPageview']);" NL;
         put "" NL;
         put "  (function() {" NL;
         put "    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;" NL;
         put
               "    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.co
m/ga.js';" NL;
         put "    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);" NL;
         put "  })();" NL;
         put NL;
         put "</script>" NL;
         put NL;
         put "</head>" NL;
   end;

   define event doc;
      start:
         set $empty_tag_suffix " /";
         set $doctype "<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"""
               "    ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">";
         set $framedoctype "<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Frameset//EN"">";
         put $doctype NL;
         put "<html xmlns=""http://www.w3.org/1999/xhtml"">" NL;

      finish:
         put "</html>" NL;
   end;

   define event contents;
      start:
         put $doctype NL;
         put "<html xmlns=""http://www.w3.org/1999/xhtml"">" NL;

      finish:
         put "</html>" NL;
   end;

   define event doc_body;
      put "<body onload=""startup()""";
         put " onunload=""shutdown()""";
         put " bgproperties=""fixed""" / WATERMARK;
         putq " background=" BACKGROUNDIMAGE;

         trigger style_inline;
         put ">" NL;
8 The SAS System                                                                             17:04 Wednesday, April 16, 2014


         trigger pre_post;
         put NL;

         trigger ie_check;
         put "<div id=""container"">" NL;
         put NL "<!-- BANNER AND NAV BAR -->" NL;
         put "<div id=""banner"" title=""NeighborhoodInfo DC"">";
         put "<a href=""../index.html"">";
         put
               "<img src=""../images/neighborhoodinfodc.gif"" width=""920"" height=""88"" alt=""NeighorhoodInfo DC banner""/
></a></div>";
         put "<div id=""navbar"" style=""background-color: #c98d95"">";
         put "<a href=""../index.html"">Home</a>";
         put "<a href=""../about.html"">About Us</a>";
         put "<a href=""../profiles.html"" class=""highlight"">Neighborhood Profiles</a>";
         put "<a href=""../Housing/index.html"">Housing</a>";
         put "<a href=""../maps.html"">Maps</a>";
         put "<a href=""../resources.html"">Resources</a>";
         put "<a href=""../Maryland/index.html"">Maryland</a>";
         put "<a href=""../Questions.html"" class=""no_pipe"">Ask a Question</a>";
         put "</div>" NL;
         put "<div class=""branch"" style=""padding-left:10px"">" NL;

      finish:
         put "<div id=""footer"" align=""center"" style=""margin:0; padding:0; "">" NL;
         put "<div style=""background-color:#c98d95; padding: 12px 0; font-weight: bold;"">" NL;
         put
               %nrstr(" Neighborhood Info DC &mdash;a project of The Urban Institute and Washington DC Local Initiatives Sup
port Corporation %(LISC%)<br />") NL;
         put "P: 202-261-5760 / E: <a href=""mailto:info@neighborhoodinfodc.org"">info@neighborhoodinfodc.org</a> </div>"
               NL;
         put %nrstr("<table width=""50%%"" border=""0"" align=""center"" cellpadding=""4"" cellspacing=""0"">") NL;
         put "<tr valign=""top"">" NL;
         put %nrstr("<td width=""50%%"" align=""center"">") NL;
         put
               "<a href=""http://www.urban.org""><img src=""../images/UI-logo-small.png"" alt=""Urban Institute logo"" width
=""130"" height=""38"" border=""0"" /></a><br />" NL;
         put "    2100 M Street, NW<br />" NL;
         put "    Washington, DC 20037</td>" NL;
         put %nrstr("<td width=""50%%"" align=""center"">") NL;
         put
               "  <a href=""http://www.lisc.org/washingtondc/""><img src=""../images/LISC.png"" alt=""LISC logo"" width=""66
"" height=""37"" border=""0"" /></a><br />" NL;
         put "    1825 K Street NW Suite 1100<br />" NL;
         put "    Washington, DC 20006</td>" NL;
9 The SAS System                                                                             17:04 Wednesday, April 16, 2014

         put "</tr>" NL;
         put "</table>" NL;
         put "  </div>" NL;
         put "</div>" NL;
         put "</div>" NL;
         put "</div>" NL;

         trigger pre_post;
         put "</body>" NL;
   end;

   define event data;
      start:
         put "<td";
         putq " id=" HTMLID;
         putq " headers=" headers /if $header_data_associations;

         trigger rowcol;

         trigger align;
         put " nowrap=""nowrap""" /if no_wrap;
         put ">";

         trigger cell_value;

      finish:

         trigger cell_value;
         put "</td>" NL;
   end;
   parent = Tagsets.Xhtml;
end;
NOTE: Path 'Tagsets.profileXHTML' is in: SASUSER.TEMPLAT.
80           source tagsets.xhtml;
define tagset Tagsets.Xhtml;
   notes "XHTML 1.0";

   define event doc;
      start:
         set $empty_tag_suffix " /";
         set $doctype "<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"">";
         set $framedoctype "<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Frameset//EN"">";
         put $doctype NL;
         put "<html>" NL;

      finish:
10 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         put "</html>" NL;
   end;
   split = "<br/>";
   parent = tagsets.html4;
end;
NOTE: Path 'Tagsets.Xhtml' is in: SASHELP.TMPLMST.
81           source tagsets.html4;
define tagset Tagsets.Html4;
   notes "HTML 4.01";

   define event doc;
      start:
         set $doctype "<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"">";
         set $framedoctype "<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Frameset//EN"">";
         put $doctype NL;
         put "<html>" NL;

      finish:
         put "</html>" NL;
   end;

   define event contents;
      start:
         put $doctype NL;
         put "<html>" NL;

      finish:
         put "</html>" NL;
   end;

   define event top_file;
      start:
         put $framedoctype NL;
         put "<html>" NL;

      finish:
         put "</html>" NL;
   end;

   define event contents_body;
      start:
         put "<body";
         putq " class=" HTMLCLASS;

         trigger style_inline;
         put ">" NL;
11 The SAS System                                                                            17:04 Wednesday, April 16, 2014


         trigger pre_post;

      finish:

         trigger pre_post;
         put "</body>" NL;
   end;

   define event preformatted;
      start:

         trigger nobreak /breakif cmp( data_viewer, "Table");
         put "<pre";
         putq " class=" HTMLCLASS;

         trigger style_inline;
         put ">";

      finish:

         trigger nobreak /breakif cmp( data_viewer, "Table");
         put "</pre>";
   end;

   define event nobreak;
      start:
         set $nb_value tranwrd(value," ",space);

      finish:
         unset $nb_value;
   end;

   define event do_value;

      trigger do_header_dots;
      put VALUE /if ^exists( $nb_value);
      put $nb_value;
   end;
   parent = tagsets.htmlcss;
   embedded_stylesheet;
end;
NOTE: Path 'Tagsets.Html4' is in: SASHELP.TMPLMST.
82           source tagsets.htmlcss;
define tagset Tagsets.Htmlcss;
   notes "This is HTML with full CSS support";
12 The SAS System                                                                            17:04 Wednesday, April 16, 2014


   define event put_value;
      put VALUE;
   end;

   define event shortstyles;
   end;

   define event style_class;

      trigger style_class2;
   end;

   define event spanhead1;
      start:
         put "<td";

         trigger classalign;
         putq " rowspan=" ROWSPAN /if ^cmp( ROWSPAN, "1");
         putq " colspan=" COLSPAN /if ^cmp( COLSPAN, "1");

         trigger style_inline;
         put ">";

         trigger pre_post start;

         do /if exists( URL);

            trigger hyperlink_value;

         else;

            trigger preformatted start /if asis;
            put VALUE;

            trigger preformatted finish /if asis;
         done;

         put %nrstr("&nbsp;") /if ^exists( strip(value));

      finish:

         trigger pre_post finish;
         put "</td>" NL;
   end;

13 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   define event head1;
      start:
         put "<td>";

         trigger pre_post start;
         put "<div";

         trigger classalign;

         trigger style_inline;
         put ">";

         trigger hyperlink_value;
         put VALUE /if ^exists( URL);
         put %nrstr("&nbsp;") /if ^exists( strip(value));

      finish:

         trigger hyperlink;
         put "</div>";

         trigger pre_post finish;
         put "</td>" NL;
   end;

   define event head2;

      trigger pre_post start;
      put "<div";

      trigger classalign;

      trigger style_inline;
      put ">";

      trigger hyperlink_value;
      put VALUE /if ^exists( URL);
      put %nrstr("&nbsp;") /if ^exists( strip(value));
      put "</div>" NL;

      trigger pre_post finish;
   end;

   define event head3;

      trigger pre_post start;
14 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put "<div";

      trigger classalign;

      trigger style_inline;
      put ">";

      trigger hyperlink_value;
      put VALUE /if ^exists( URL);
      put %nrstr("&nbsp;") /if ^exists( strip(value));
      put "</div>" NL;

      trigger pre_post finish;
   end;

   define event title_container;
      start:
         put "<table";
         putq " class=" HTMLCLASS;

         trigger style_inline;
         put %nrstr(" width=""100%%""");

         trigger do_borders;
         put " summary=""Page Layout"">" NL;

      finish:
         put "</table><br";
         put $empty_tag_suffix;
         put ">" NL;
   end;

   define event title_container_row;
      start:
         put "<tr>" NL;

      finish:
         put "</tr>" NL;
   end;

   define event doc_body;
      put "<body onload=""startup()""";
         put " onunload=""shutdown()""";
         put " bgproperties=""fixed""" / WATERMARK;
         putq " class=" HTMLCLASS;
         putq " background=" BACKGROUNDIMAGE;
15 The SAS System                                                                            17:04 Wednesday, April 16, 2014


         trigger style_inline;
         put ">" NL;

         trigger pre_post;
         put NL;

         trigger ie_check;

      finish:

         trigger pre_post;
         put "</body>" NL;
   end;

   define event table;
      start:
         put "<div";

         trigger alt_align;
         put ">" NL;

         trigger table_caption;

         trigger pre_post;
         put "<table";
         putq " class=" HTMLCLASS;
         putq " id=" HTMLID;

         trigger style_inline;

         trigger do_borders;

         trigger table_summary;
         put ">" NL;

      finish:
         put "</table>" NL;

         trigger pre_post;
         put "</div>" NL;
   end;

   define event verbatim_container;
      start:
         put "<div";
16 The SAS System                                                                            17:04 Wednesday, April 16, 2014


         trigger alt_align;
         put ">" NL;

         trigger pre_post;
         put "<table";

         do /if ^$css_table;
            putq " cellspacing=""0""";
            putq " cellpadding=""0""";
         done;

         put " summary=""Page Layout""";
         put ">" NL;
         put "<tr><td>" NL;

      finish:
         put "</td></tr>" NL;
         put "</table>" NL;

         trigger pre_post;
         put "</div>" NL;
   end;

   define event verbatim;
      start:

         trigger preformatted;

      finish:

         trigger preformatted;
   end;

   define event cell_value;
      start:

         trigger preformatted /if asis;

         trigger pre_post;

         trigger hyperlink;

         trigger do_value /if ^exists( URL);

      finish:
17 The SAS System                                                                            17:04 Wednesday, April 16, 2014


         trigger hyperlink;

         trigger pre_post;

         trigger preformatted /if asis;
   end;

   define event header;
      start:
         put "<th";
         putq " id=" HTMLID;
         putq " headers=" headers /if $header_data_associations;
         putq " title=" flyover;

         trigger classalign;

         trigger style_inline;

         trigger rowcol;
         put ">";

         trigger cell_value;

      finish:

         trigger cell_value;
         put "</th>" NL;
   end;

   define event data;
      start:

         trigger header /breakif cmp( htmlclass, "RowHeader");

         trigger header /breakif cmp( htmlclass, "Header");
         put "<td";
         putq " id=" HTMLID;
         putq " headers=" headers /if $header_data_associations;
         putq " title=" flyover;

         trigger classalign;

         trigger style_inline;

         trigger rowcol;
18 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         put " nowrap" /if no_wrap;
         put ">";

         trigger cell_value;

      finish:

         trigger header /breakif cmp( htmlclass, "RowHeader");

         trigger header /breakif cmp( htmlclass, "Header");

         trigger cell_value;
         put "</td>" NL;
   end;

   define event stacked_cell;
      start:
         put "<td";
         putq " title=" flyover;
         put " class=""stacked_cell " htmlclass """";

         trigger style_inline;

         trigger rowcol;
         put ">";
         put %nrstr("<table width=""100%%"" border=""0""");

         do /if ^$css_table;
            putq " cellpadding=" $parent_table_padding;
            putq " cellspacing=""0""";
         done;

         put ">" NL;

      finish:
         put "</table></td>" NL;
   end;

   define event stacked_value;
      start:
         put "<tr>" NL;
         put "<td";
         putq " title=" flyover;

         trigger real_align start;
         put " " htmlclass;
19 The SAS System                                                                            17:04 Wednesday, April 16, 2014


         do /if cmp( first_stacked_value, "1");
            put " top_stacked_value";

         else /if cmp( last_stacked_value, "1");
            put " bottom_stacked_value";

         else /if last_stacked_value;
            put " middle_stacked_value";
         done;


         trigger real_align finish;

         trigger style_inline;

         trigger rowcol;
         put " nowrap" /if no_wrap;
         put ">";

         trigger cell_value;

      finish:

         trigger cell_value;
         put "</td>" NL;
         put "</tr>" NL;
   end;

   define event stacked_value_header;
      start:
         put "<tr>" NL;
         put "<th";
         putq " title=" flyover;

         trigger real_align start;
         put " " htmlclass;

         do /if cmp( first_stacked_value, "1");
            put " top_stacked_value";

         else /if cmp( last_stacked_value, "1");
            put " bottom_stacked_value";

         else;
            put " middle_stacked_value";
20 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         done;


         trigger real_align finish;

         trigger style_inline;

         trigger rowcol;
         put ">";

         trigger cell_value;

      finish:

         trigger cell_value;
         put "</th>" NL;
         put "</tr>" NL;
   end;

   define event preformatted;
      start:
         put "<pre";
         putq " class=" htmlclass;

         trigger style_inline;
         put ">";

      finish:
         put "</pre>";
   end;

   define event list;
      start:
         put "<";

         trigger list_tag;
         putq " class=" HTMLCLASS;
         put ">" NL;

      finish:
         put "</";

         trigger list_tag;
         put ">" NL;
   end;

21 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   define event list_entry;
      start:
         put "<li";
         putq " class=" HTMLCLASS;
         put ">" NL;

         trigger do_link /if listentryanchor;

         trigger do_list_value /if ^listentryanchor;

      finish:
         put "<br></li>" NL;
   end;

   define event do_link;

      trigger do_list_value_pre_post;

      trigger hyperlink_value /if any( URL, ANCHOR);
      put VALUE /if ^any( URL, ANCHOR);

      trigger do_list_value_pre_post finish;
   end;

   define event do_list_value;

      trigger do_list_value_pre_post;
      put value;

      trigger do_list_value_pre_post finish;
   end;

   define event do_list_value_pre_post;
      start:
         unset $match;
         set $match "true" /if cmp( value, label);
         break /if exists( $proc_name, $match);

         trigger pre_post /if ^cmp( "datastep", value);

      finish:
         unset $match;
         set $match "true" /if cmp( value, label);
         break /if exists( $proc_name, $match);

         trigger pre_post finish /if ^cmp( "datastep", value);
22 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         put NL /if cmp( "datastep", value);
   end;

   define event hyperlinkvalue;

      trigger hyperlink start;

      trigger hyperlink finish;
   end;

   define event hyperlink;
      start:
         break /if ^URL;
         set $close_hyperlink "TRUE";
         put "<a href=""" URL;
         put """";

         do /if cmp( dest_file, "contents");
            putq " target=" HREFTARGET /if frame_name;

         else;
            putq " target=" HREFTARGET;
         done;

         put ">";

         trigger do_value;

      finish:
         break /if ^$close_hyperlink;
         put "</a>" NL;
         unset $close_hyperlink;
   end;

   define event do_value;

      trigger do_header_dots;
      put VALUE;
   end;

   define event contents_branch;
      start:

         trigger list_entry start;

         trigger list;
23 The SAS System                                                                            17:04 Wednesday, April 16, 2014


      finish:

         trigger list finish;

         trigger list_entry finish;
      file = CONTENTS;
   end;

   define event contents_leaf;

      trigger list_entry start;

      trigger list_entry finish;
      file = CONTENTS;
   end;

   define event page_anchor;
      start:
         put "<li";
         putq " class=" HTMLCLASS;
         put ">" NL;
         put "<a href=""";
         put body_name /if ^exists( body_url);
         put body_url;
         put "#" ANCHOR;
         put """";
         putq " target=""body"" ";
         put ">";

         trigger pre_post;
         put "Page " total_page_count;

         trigger pre_post finish;
         put "</a>" NL;

      finish:
         put "</li>" NL;
      file = PAGES;
   end;

   define event caption;
      put "<td";
         putq " id=" htmlid;
         putq " title=" flyover;

24 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         trigger classalign;

         trigger style_inline;
         put ">";
         put TEXT;

      finish:
         put "</td>" NL;
         put "</tr><tr><td>" /if cmp( TYPE, "T");
         put "<td>" /if cmp( TYPE, "L");
   end;

   define event byline;

      trigger head2;
      put "<p/>";
   end;

   define event proc_title;

      trigger head2;
   end;

   define event system_title;
      start:

         trigger spanhead1;

      finish:

         trigger spanhead1;
   end;

   define event system_footer;
      start:

         trigger spanhead1;

      finish:

         trigger spanhead1;
   end;

   define event Gnote;
      start:
         put "<div";
25 The SAS System                                                                            17:04 Wednesday, April 16, 2014


         trigger alt_align;
         put ">";
         put "<table";
         putq " class=" HTMLCLASS;
         put ">";
         put "<tr>" NL;

      finish:
         put "</tr>" NL;
         put "</table>" NL;
         put "</div>";
   end;

   define event GBanner;
      put "<td";

      trigger classalign;

      trigger style_inline;
      put ">" NL;

      trigger pre_post;
      put "</td>" NL;
   end;

   define event GNContent;
      put "<td";
      put " class=""l";
      put " " HTMLCLASS;
      put """";

      trigger style_inline;
      put ">";

      trigger pre_post start;
      put VALUE;

      trigger pre_post finish;
      put "</td>";
   end;

   define event noteBanner;

      trigger GBanner;
      style = NoteBanner;
26 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   end;

   define event NoteContent;

      trigger GNContent;
      style = NoteContent;
   end;

   define event note;

      trigger Gnote start;

      trigger noteBanner;

      trigger noteContent;

      trigger Gnote finish;
   end;

   define event WarnBanner;

      trigger GBanner;
      style = WarnBanner;
   end;

   define event WarnContent;

      trigger GNContent;
      style = WarnContent;
   end;

   define event Warning;

      trigger Gnote start;

      trigger WarnBanner;

      trigger WarnContent;

      trigger Gnote finish;
   end;

   define event ErrorBanner;

      trigger GBanner;
      style = ErrorBanner;
27 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   end;

   define event ErrorContent;

      trigger GNContent;
      style = ErrorContent;
   end;

   define event Error;

      trigger Gnote start;

      trigger ErrorBanner;

      trigger ErrorContent;

      trigger Gnote finish;
   end;

   define event FatalBanner;

      trigger GBanner;
      style = FatalBanner;
   end;

   define event FatalContent;

      trigger GNContent;
      style = FatalContent;
   end;

   define event Fatal;

      trigger Gnote start;

      trigger FatalBanner;

      trigger FatalContent;

      trigger Gnote finish;
   end;
   parent = tagsets.phtml;
   embedded_stylesheet;
end;
NOTE: Path 'Tagsets.Htmlcss' is in: SASHELP.TMPLMST.
83           source tagsets.phtml;
28 The SAS System                                                                            17:04 Wednesday, April 16, 2014

define tagset Tagsets.Phtml;
   notes "This is the plain HTML definition";

   define event graph_java_width;
      put "   document.writeln(""WIDTH=" COLWIDTH """);" NL /if ^cmp( COLWIDTH, "0");
      break /if ^cmp( COLWIDTH, "0");
      put "   document.writeln(""WIDTH=" OUTPUTWIDTH """);" NL /if exists( OUTPUTWIDTH);
      put "   document.writeln(""WIDTH=640"");" NL /if ^exists( OUTPUTWIDTH);
      style = Graph;
      pure_style;
   end;

   define event graph_java_height;
      put "   document.writeln(""HEIGHT=" DEPTH """);" NL /if ^cmp( DEPTH, "0");
      break /if ^cmp( DEPTH, "0");
      put "   document.writeln(""HEIGHT=" OUTPUTHEIGHT """);" NL /if exists( OUTPUTHEIGHT);
      put "   document.writeln(""HEIGHT=480"");" NL /if ^exists( OUTPUTHEIGHT);
      style = Graph;
      pure_style;
   end;

   define event graph_java2_attribute;
      put "   document.writeln(""";
      put NAME "=\""" VALUE "\""";
      put """);" NL;
   end;

   define event graph_java2_fxd_attributes;
      put "   document.writeln("">"");" NL;

      trigger javascript finish;
   end;

   define event graph_attribute;
      put " " NAME;
      putq "=" VALUE NL;
   end;

   define event graph_parameter;
      putq "<PARAM NAME=" NAME;
      putq " VALUE=" VALUE;
      put ">" NL;
   end;

   define event graph_onload;
   end;
29 The SAS System                                                                            17:04 Wednesday, April 16, 2014


   define event graph_fillin_block;
   end;

   define event graph_fxd_parameters;
      putq "<PARAM NAME=""BackColor"" VALUE=" BACKGROUND;
      put ">" NL / exists( BACKGROUND);
   end;

   define event html3_center;
      start:
         put "<CENTER>" NL;

      finish:
         put "</CENTER>" NL;
   end;

   define event java_unsupported;
      put "Sorry, your browser does not support the applet tag." NL;
      putq "The graph " code " cannot be displayed." NL;
   end;

   define event activex_unsupported;
      put "Sorry, there was a problem with the Graph control or plug-in in your browser." NL;
      putq "The graph " value " cannot be displayed." NL;
   end;

   define event graph_description;
      putq value NL;
   end;

   define event activex_graph;
      start:
         put "<OBJECT " NL;
         putq " ID=" ref_id NL;

      finish:
         put "</OBJECT> " NL;
   end;

   define event java2_parameters;
      put "<PARAM NAME=""TYPE"" VALUE=""application/x-java-applet;version=1.5"">" NL;
      put "<PARAM NAME=""ENCODING"" VALUE=" /if exists( ENCODING);
      putq ENCODING /if exists( ENCODING);
      put ">" NL /if exists( ENCODING);
      put "<PARAM NAME=""SCRIPTABLE"" VALUE=""true"">" NL;
30 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   end;

   define event odstag_eg;
      put "<!-- ODSTAG TYPE=" value;
      put " ID=" anchor;
      put " -->" NL;
   end;

   define event java2_graph;
      start:

         trigger ie_check /if ^exists( $ieCheckDone);

         trigger javascript start;
         put "   document.writeln(""<OBJECT"");" NL;

         trigger graph_java_width;

         trigger graph_java_height;
         put "   document.writeln(""ALIGN=\""baseline\"""");" NL;
         put "if (_ie == true) {" NL;
         put "   document.writeln(""CLASSID=\""clsid:8AD9C840-044E-11D1-B3E9-00805F499D93\"""");" NL;

         do /if CODEBASE;
            put "   document.writeln(""CODEBASE=\""" CODEBASE "\"""");" NL;

         else;
            put
                  "   document.writeln(""CODEBASE=\""http://java.sun.com/update/1.5.0/jinstall-1_5_0_12-windows-i586.cab#Ver
sion=1,5,0,0\"""");" NL;
         done;

         put "}" NL;
         put "else {" NL;
         put "   document.writeln(""TYPE=\""application/x-java-applet;version=1.5\"""");" NL;
         put "   document.writeln(""CODEBASE=\""http://java.sun.com/javase/downloads/index_jdk5.jsp\"""");" NL;
         put "}" NL;

      finish:
         put "</OBJECT>" NL;
      pure_style;
   end;

   define event graph_fxd_attributes;

      trigger graph_actx_width;
31 The SAS System                                                                            17:04 Wednesday, April 16, 2014


      trigger graph_actx_height;
      putq " CLASS=" HTMLCLASS NL;
      put " ALIGN=""top"">" NL;
      pure_style;
   end;

   define event javascript;
      start:
         put "<script language=""javascript"" type=""text/javascript"">" NL;
         put "<!-- " NL;

      finish:
         put NL "//-->" NL;
         put "</script>" NL NL;
   end;

   define event options_set;

      trigger set_options;

      trigger documentation;
   end;

   define event documentation;

      trigger help /if cmp( $options["DOC"], "help");

      trigger quick_reference /if cmp( $options["DOC"], "quick");
   end;

   define event help;
      putlog "==============================================================================";
      putlog "The " tagset " Tagset Help Text.";
      putlog " ";
      putlog "This Tagset/Destination creates output in HTML format.";
      putlog " ";
      putlog " ";

      trigger quick_reference;
   end;

   define event quick_reference;
      putlog "==============================================================================";
      putlog " ";
      putlog "These are the options supported by this tagset.";
32 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      putlog " ";
      putlog "Sample usage:";
      putlog " ";
      putlog "ods html options(doc='Quick'); ";
      putlog " ";
      putlog "ods html options(header_dots='yes' summary_byvars='yes'); ";
      putlog " ";
      putlog "Doc:  No default value.";
      putlog "     Help: Displays introductory text and options.";
      putlog "     Quick: Displays available options.";
      putlog " ";
      putlog "header_data_associations:   Default Value 'no'";
      putlog "     Associates data cells and header cells by adding an ID attribute";
      putlog "     to each header cell and listing the IDs of associated headers in";
      putlog "     a HEADERS attribute added to each data cell. (PROC REPORT only)";
      putlog " ";
      putlog "header_dots:   Default Value 'no'";
      putlog "     Puts hidden dots before the text in all table headers";
      putlog " ";
      putlog "summary_as_caption:   Default Value 'no'";
      putlog "     Causes a table caption to be created from the table summary.";
      putlog " ";
      putlog "summary_byvars:   Default Value 'no'";
      putlog "     Adds a list of by variable names to the table summary";
      putlog " ";
      putlog "summary_byvals:   Default Value 'no'";
      putlog "     Add the values of the by variables along with the names in the table summary";
      putlog "     This works with summary byvars but not without.";
      putlog " ";
      putlog "summary:   Default Value ''";
      putlog "     Text for the table summary";
      putlog " ";
      putlog "summary_prefix:   Default Value ''";
      putlog "     Text to place at the beginning of table summary";
      putlog " ";
      putlog "summary_suffix:   Default Value ''";
      putlog "     Text to place at the end of table summary";
      putlog " ";
      putlog "page_break:   Default Value 'yes'";
      putlog "     If yes, the usual pagebreak style attribute will be used to create";
      putlog "     what becomes the page separator.  Usually that is an HR line.";
      putlog "     If No, then no pagebreak will be output.";
      putlog "     If anything else, the value given will be output as the pagebreak.";
      putlog " ";
      putlog "css_table:   Default Value 'no'";
      putlog "     If yes, the table tags will not have any style attributes but will";
33 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      putlog "     rely entirely on the table style defined in the stylesheet.  This may";
      putlog "     create undesirable table rendering in some browsers.";
      putlog " ";
      putlog "percentage_font_size:   Default Value 'no'";
      putlog "     If yes, titles and footnotes will allow font sizes to be specified as";
      putlog "     a percentage of the font size.";
      putlog " ";
      putlog "==============================================================================";
   end;

   define event set_options;
      unset $header_dots;
      unset $byvar_caption;
      set $options["junk" ] "junk" /if ^$options;
      unset $header_data_associations;

      do /if cmp( $options["HEADER_DATA_ASSOCIATIONS"], "yes");
         set $header_data_associations "True";
      done;

      unset $header_dots;

      do /if cmp( $options["HEADER_DOTS"], "yes");
         set $header_dots "True";
      done;

      unset $summary_byvars;

      do /if cmp( $options["SUMMARY_BYVARS"], "yes");
         set $summary_byvars "True";
      done;

      unset $summary_byvals;

      do /if cmp( $options["SUMMARY_BYVALS"], "yes");
         set $summary_byvals "True";
      done;

      unset $summary_as_caption;

      do /if cmp( $options["SUMMARY_AS_CAPTION"], "yes");
         set $summary_as_caption "True";
      done;


      do /if $options["SUMMARY_PREFIX"];
34 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         set $summary_prefix $options["SUMMARY_PREFIX" ];

      else;
         unset $summary_prefix;
      done;


      do /if $options["SUMMARY"];
         set $summary $options["SUMMARY" ];

      else;
         unset $summary;
      done;


      do /if $options["SUMMARY_SUFFIX"];
         set $summary_suffix $options["SUMMARY_SUFFIX" ];

      else;
         unset $summary_suffix;
      done;

      set $pagebreak "yes";

      do /if $options["PAGEBREAK"];
         set $pagebreak $options["PAGEBREAK" ];
      done;


      do /if $options["PAGE_BREAK"];
         set $pagebreak $options["PAGE_BREAK" ];
      done;

      unset $css_table;

      do /if cmp( $options["CSS_TABLE"], "yes");
         set $css_table "True";
      done;

      unset $percentage_font_size;

      do /if cmp( $options["PERCENTAGE_FONT_SIZE"], "yes");
         set $percentage_font_size "True";
      done;

   end;
35 The SAS System                                                                            17:04 Wednesday, April 16, 2014


   define event unicode;
      start:

         do /if value;
         set $squote "'";
         eval $temp value;
         set $temp strip($temp);
         set $temp upcase($temp);

         do /if $unicodeMap[$temp];
            eval $newvalue $unicodeMap[$temp ];

         else;

            do /if (index($temp, $squote) > 0);
               set $newvalue scan($temp,1,$squote);

            else /if (index($temp, """") > 0);
               set $newvalue scan($temp,1,"""");

            else;
               set $newvalue $temp;
            done;

         done;

         eval $unicode inputn($newvalue,"hex4.");
         put %nrstr("&#") $unicode ";" /if $unicode;
      done;

   end;

   define event bulleted_list;
      start:
         put "<ul";

         trigger classalign;

         trigger style_inline;
         putq " start=" startvalue /if startvalue > 0;
         put ">" NL;

      finish:
         put "</ul>" NL;
   end;
36 The SAS System                                                                            17:04 Wednesday, April 16, 2014


   define event bulleted_list_item;
      start:
         put "<li";

         trigger classalign;

         trigger style_inline;
         putq " value=" startvalue /if startvalue > 0;
         put ">";

      finish:
         put "</li>" NL;
   end;

   define event LAYOUT;
      start:
         putlog " LAYOUT start" /if $layout_trace;
         put "<div";

         trigger alt_align;
         put ">" NL;
         put "<table";

         trigger classalign;

         trigger style_inline;
         putq " id=" HTMLID;

         do /if ^$css_table;
            putq " rules=" LOWCASE(RULES);
            putq " frame=" LOWCASE(FRAME);
         done;

         putq " border=" BORDERWIDTH /if exist( BORDERWIDTH);
         putq " borderstyle=" BORDERSTYLE /if exist( BORDERSTYLE);
         putq " bordercolor=" BORDERCOLOR /if exist( BORDERCOLOR);
         putq " bordercolordark=" BORDERCOLORDARK /if exist( BORDERCOLORDARK);
         putq " bordercolorlight=" BORDERCOLORLIGHT /if exist( BORDERCOLORLIGHT);
         put " summary=""Layout table""";
         put ">" NL;

      finish:
         put "</table>" NL;
         put "</div>" NL;
         putlog " LAYOUT finish " /if $layout_trace;
37 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   end;

   define event LAYOUT_COLSPECS;
      putlog " LAYOUT_COLSPECS " /if $layout_trace;

      trigger COLSPECS;
   end;

   define event LAYOUT_COLSPEC_ENTRY;
      putlog " LAYOUT_COLSPEC_ENTRY " /if $layout_trace;

      trigger COLSPEC_ENTRY;
   end;

   define event LAYOUT_COLSPECSEP;
      putlog " LAYOUT_COLSPECSEP " /if $layout_trace;

      trigger COLSPECSEP;
   end;

   define event LAYOUT_BODY;
      putlog " LAYOUT_BODY " /if $layout_trace;

      trigger BODY;
   end;

   define event LAYOUT_ROW;
      start:
         putlog " LAYOUT_ROW  start" /if $layout_trace;

         trigger ROW start;

      finish:
         putlog " LAYOUT_ROW  finish" /if $layout_trace;

         trigger ROW finish;
   end;

   define event LAYOUT_REGION;
      start:
         set $no_pagebreak "true";
         putlog " LAYOUT_REGION start" /if $layout_trace;
         put "<td";
         putq " id=" HTMLID;
         putq " title=" flyover;

38 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         trigger classalign;

         trigger style_inline;

         trigger rowcol;
         put ">";

         trigger cell_value;

      finish:
         put "</td>" NL;
         unset $no_pagebreak;
         putlog " LAYOUT_REGION finish " /if $layout_trace;
   end;

   define event FORMAT;
      put "<span";

      trigger style_inline;
      put ">";

      trigger preformatted start /if asis;
      put value;

      trigger preformatted finish /if asis;
      put "</span>";
   end;

   define event do_header_dots;
      break /if ^$header_dots;
      break /if ^htmlclass;
      break /if ^cmp( event_name, "header");
      put "<span " "class=""" htmlclass "_dots"">...</span>";
   end;

   define event style_class;
   end;

   define event putvars;
      put "event vars" NL;
      putvars event "name: " _name_ " = " _value_ NL;
      put "memory vars" NL;
      putvars mem "name: " _name_ " = " _value_ NL;
      put "style vars" NL;
      putvars style "name: " _name_ " = " _value_ NL;
   end;
39 The SAS System                                                                            17:04 Wednesday, April 16, 2014


   define event initialize;

      trigger set_just_lookup;

      trigger grand_init;

      trigger set_options;

      trigger store_all_borders;

      trigger documentation;
   end;

   define event show_charset;
      set $show_charset "1" /if ^exists( suppress_charset);
   end;

   define event put_value;
      put VALUE;
   end;

   define event put_value_cr;
      put VALUE NL;
   end;

   define event dynamic;
      put "Content-Type: text/html" NL NL NL;
   end;

   define event top_file;
      start:
         put HTMLDOCTYPE NL;
         put "<html>" NL;

      finish:
         put "</html>" NL;
   end;

   define event top_title;
      put "<title>";
      put "SAS Output Frame" /if ^exists( value);
      put VALUE;
      put "</title>" NL;
   end;

40 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   define event top_code;
      start:
         set $content_position "first" /if cmp( type, "f");
         set $content_position "last" /if cmp( type, "l");
         set $content_orientation "horizontal" /if cmp( colcount, "1");
         set $content_orientation "vertical" /if cmp( colcount, "2");
         put "<frameset";
         put " cols=""" /if cmp( colcount, "2");
         put " rows=""" /if cmp( colcount, "1");

         trigger content_frameset start /if cmp( type, "f");

         trigger body_frameset /if cmp( type, "l");
         put ",";

         trigger body_frameset /if cmp( type, "f");

         trigger content_frameset /if cmp( type, "l");
         put """>" NL;

         trigger contents_pages_frameset start /if cmp( type, "f");

      finish:
         put "<noframes>" NL;
         put "<body>" NL;
         put "<ul>" NL;
         unset $link;
         set $link contents_url /if exists( contents_url);
         set $link contents_name /if ^exists( $link);
         put "<li><a href=""" $link """>The Table of Contents</a></li>" NL /if exists( $link);
         unset $link;
         set $link pages_url /if exists( pages_url);
         set $link pages_name /if ^exists( $link);
         put "<li><a href=""" $link """>The Table of Pages</a></li>" NL /if exists( $link);
         unset $link;
         set $link body_url /if exists( body_url);
         set $link body_name /if ^exists( $link);
         put "<li><a href=""" $link """>The Contents</a></li>" NL /if exists( $link);
         put "</ul>" NL;
         put "</body>" NL;
         put "</noframes>" NL;
         put "</frameset>" NL;
   end;

   define event contents_pages_frameset;
      start:
41 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         break /if ^exists( pages_name, contents_name);
         put "<frameset";
         put " rows=""" /if cmp( colcount, "2");
         put " cols=""" /if cmp( colcount, "1");
         put %nrstr("66%%,*"">") NL;

      finish:
         break /if ^exists( pages_name, contents_name);
         put "</frameset>" NL;
   end;

   define event content_frameset;
      put %nrstr("23%%") /if ^exists( CONTENTSIZE);
      put CONTENTSIZE;
   end;

   define event body_frameset;
      put "*" /if ^exists( BODYSIZE);
      put BODYSIZE;
   end;

   define event pages_frame;
      break /if ^exists( pages_name);
      put "<frame marginwidth=""4"" marginheight=""0""";
      put " frameborder=";
      put """1""" /if cmp( frameborder, "yes");
      put """0""" /if ^cmp( frameborder, "yes");
      putq " src=" URL;
      put " name=""pages"" scrolling=";
      putq "auto" /if ^exists( CONTENTSCROLLBAR);
      putq CONTENTSCROLLBAR;
      putq " title=" pages_title;
      put " title=""The Table of Pages""" /if ^exists( pages_title);
      put $empty_tag_suffix;
      put ">" NL;

      trigger contents_pages_frameset finish;
   end;

   define event content_frame;
      break /if ^exists( contents_name);
      put "<frame marginwidth=""4"" marginheight=""0""";
      put " frameborder=";
      put """1""" /if cmp( frameborder, "yes");
      put """0""" /if ^cmp( frameborder, "yes");
      putq " src=" URL;
42 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put " name=""contents"" scrolling=";
      putq "auto" /if ^exists( CONTENTSCROLLBAR);
      putq CONTENTSCROLLBAR;
      putq " title=" contents_title;
      put " title=""The Table of Contents""" /if ^exists( contents_title);
      put $empty_tag_suffix;
      put ">" NL;
   end;

   define event body_frame;
      put "<frame marginwidth=""9"" marginheight=""0""";
      put " frameborder=";
      put """1""" /if cmp( frameborder, "yes");
      put """0""" /if ^cmp( frameborder, "yes");
      putq " src=" URL;
      put " name=""body"" scrolling=";
      putq "auto" /if ^exists( BODYSCROLLBAR);
      putq BODYSCROLLBAR;
      putq " title=" body_title;
      put " title=""The SAS Output""" /if ^exists( body_title);
      put $empty_tag_suffix;
      put ">" NL;

      trigger contents_pages_frameset start /if cmp( $content_position, "last");
   end;

   define event doc;
      start:
         put HTMLDOCTYPE NL;
         put "<html>" NL;

      finish:
         put "</html>" NL;
   end;

   define event doc_head;
      start:
         put "<head>" NL;
         put VALUE NL;

      finish:
         put "</head>" NL;
   end;

   define event code_body;

43 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      trigger contents_code;
   end;

   define event contents_bullet_style;
      put "<style type=""text/css"">" NL;
      put "<!--" NL;
      put "/* Outline Style Sheet */" NL NL;
      put "UL { cursor: pointer;" NL;
      put "    list-style-type: decimal;}" NL NL;
      put "DL { cursor: pointer;" NL;
      put "    list-style-type: none;}" NL NL;
      put "// so Netscape wont indent so far" NL;
      put "DL {marginLeft: -12pt}" NL NL;
      put "SPAN {cursor: pointer}" NL;
      put "-->" NL;
      put "</style>" NL NL;
   end;

   define event contents_javascript;

      trigger contents_inline_code /if ^any( code_name, code_url);

      trigger contents_code_link /if any( code_name, code_url);
   end;

   define event contents_inline_code;

      trigger javascript_tag start;

      trigger contents_code;

      trigger javascript_tag finish;
   end;

   define event javascript_tag;
      start:
         put "<script language=""javascript"" type=""text/javascript"">" NL;
         put "<!-- " NL;

      finish:
         put NL;
         put "//-->" NL;
         put "</script>" NL;
   end;

   define event contents_code;
44 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put "var defaultlevel = -1;" NL;
      put "var openimage = 'folderopen.gif';" NL;
      put "var closeimage = 'folderclosed.gif';" NL;
      put NL;
      put "var initialized = false;" NL;
      put "var expanded = false;" NL;
      put NL;
      put "// Check for DOM support" NL;
      put "var DOMsupport = false;" NL;
      put %nrstr("if %(document.getElementById && ") NL;
      put %nrstr("    document.createTextNode && ") NL;
      put "    document.createElement)" NL;
      put "    DOMsupport = true;" NL;
      put NL;
      put "function getAllLists()" NL;
      put "//" NL;
      put "// Get a list of all lists in the document" NL;
      put "// " NL;
      put "{" NL;
      put "    var lists = new Array();" NL;
      put "    var uls = document.getElementsByTagName('UL');" NL;
      put "    for (var i = 0; i < uls.length; i++)" NL;
      put "        lists[lists.length] = uls[i];" NL;
      put "    var ols = document.getElementsByTagName('OL');" NL;
      put "    for (var i = 0; i < ols.length; i++)" NL;
      put "        lists[lists.length] = ols[i];" NL;
      put "    return lists;" NL;
      put "}" NL;
      put NL;
      put "function getAllListItems()" NL;
      put "//" NL;
      put "// Get a list of all list items in the document" NL;
      put "//" NL;
      put "{" NL;
      put "    return document.getElementsByTagName('LI');" NL;
      put "}" NL;
      put NL;
      put "function expandCollapse()" NL;
      put "{" NL;
      put "    if ( expanded ) collapseAll();" NL;
      put "    else expandAll();" NL;
      put "}" NL;
      put NL;
      put "function collapseAll()" NL;
      put "//" NL;
      put "// Collapse all lists down to 'level' " NL;
45 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put "//" NL;
      put "{" NL;
      put "    initAll(null, false);" NL;
      put "    expanded = false;" NL;
      put "}" NL;
      put NL;
      put "function expandAll(level)" NL;
      put "//" NL;
      put "// Expand all lists up to 'level' " NL;
      put "//" NL;
      put "{" NL;
      put "    initAll(level, true);" NL;
      put "    expanded = true;" NL;
      put "}" NL;
      put "" NL;
      put "function initAll(level, visible)" NL;
      put "//" NL;
      put "// Expand/collapse all lists up to 'level' " NL;
      put "//" NL;
      put "{" NL;
      put "    if ( !DOMsupport ) return;" NL;
      put NL;
      put "    // Initialize list elements to their starting behavior" NL;
      put "    if ( !initialized ) " NL;
      put "    {" NL;
      put "        initialized = true;" NL;
      put NL;
      put "        // Set onclick events for all items with nested lists" NL;
      put "        var items = getAllListItems();" NL;
      put "        for (var i = 0; i < items.length; i++)" NL;
      put "        {" NL;
      put "            var elem = items[i];" NL;
      put "            if ( elem.getElementsByTagName('UL') ||" NL;
      put "                 elem.getElementsByTagName('OL') )" NL;
      put "            {" NL;
      put "                elem.onclick = toggleView;" NL;
      put "                elem.style.cursor = 'pointer';" NL;
      put "            }" NL;
      put "        }" NL;
      put NL;
      put "        collapseAll();" NL;
      put "    }" NL;
      put NL;
      put "    // If level is undefined or less than zero, expand everything" NL;
      put "    if ( !level || level < 0 ) " NL;
      put "        level = -1;" NL;
46 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put NL;
      put "    var lists = getAllLists();" NL;
      put NL;
      put "    for (var i=0; i < lists.length; i++)" NL;
      put "    {" NL;
      put "        nesting = getNestingLevel(lists[i]);" NL;
      put %nrstr("        if %( nesting == 0 && visible == false %)") NL;
      put "            continue;" NL;
      put "        if ( level == -1 || nesting < level )" NL;
      put "        {" NL;
      put "            setDisplay(lists[i], visible);" NL;
      put NL;
      put "            var li = lists[i].parentNode;" NL;
      put %nrstr("            while %( li && li.nodeName != 'LI' %)") NL;
      put "                li = li.parentNode;" NL;
      put "            if ( li ) setImage(li, visible);" NL;
      put "        }" NL;
      put "    }" NL;
      put "}" NL;
      put NL;
      put "function setDisplay(elem, visible)" NL;
      put "{" NL;
      put "    var display = (visible) ? 'block' : 'none';" NL;
      put "    elem.style.display = display;" NL;
      put "}" NL;
      put NL;
      put "function setImage(elem, visible)" NL;
      put "{" NL;
      put "    if ( !openimage || !closeimage ) return;" NL;
      put NL;
      put "    var images = elem.getElementsByTagName('IMG');" NL;
      put "    " NL;
      put "    if ( !images.length ) return;" NL;
      put NL;
      put "    var image = images[0];" NL;
      put NL;
      put "    image.src = ( visible ) ? openimage : closeimage;" NL;
      put "}" NL;
      put NL;
      put "function toggleView(e)" NL;
      put "//" NL;
      put "// If the children of this item are hidden, display them." NL;
      put "// If they are displayed, hide them." NL;
      put "//" NL;
      put "{" NL;
      put "    var elem = (window.event) ? window.event.srcElement : e.target;" NL;
47 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put NL;
      put %nrstr("    while %( elem && elem.nodeName != 'LI' %)") NL;
      put "        elem = elem.parentNode;" NL;
      put NL;
      put "    if ( !elem ) return;" NL;
      put NL;
      put "    var children = elem.childNodes;" NL;
      put NL;
      put "    for (var i = 0; i < children.length; i++)" NL;
      put "    {" NL;
      put "        c = children[i];" NL;
      put %nrstr("        if %( c.nodeName != 'UL' && c.nodeName != 'OL' %) continue;") NL;
      put "        if ( !c.style ) continue;" NL;
      put "        setImage(elem, (c.style.display != 'block'));" NL;
      put "        setDisplay(c, (c.style.display != 'block'));" NL;
      put "    }" NL;
      put NL;
      put "    if (window.event) window.event.cancelBubble = true;" NL;
      put "    else if (e.stopPropagation) e.stopPropagation();" NL;
      put "" NL;
      put "    return true;" NL;
      put "}" NL;
      put "" NL;
      put "function getNestingLevel(elem)" NL;
      put "//" NL;
      put "// Get the nesting level of the given list" NL;
      put "//" NL;
      put "{" NL;
      put "    var parent = elem.parentNode;" NL;
      put "    var level = 0;" NL;
      put %nrstr("    while %( parent && parent.nodeName != 'BODY' %)") NL;
      put "    { " NL;
      put "        if ( parent.nodeName == 'UL' || " NL;
      put "             parent.nodeName == 'OL' )" NL;
      put "            level++;" NL;
      put "        parent = parent.parentNode;" NL;
      put "    }" NL;
      put "    return level;" NL;
      put "}" NL;
      put NL;
      put "function _getElementsByClassName(name)" NL;
      put "//" NL;
      put "// DOM method that gets a list of elements by class name" NL;
      put "//" NL;
      put "{" NL;
      put "    var elems = document.getElementsByTagName('*');" NL;
48 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put "    var retvalue = new Array();" NL;
      put "    var i, j;" NL;
      put "" NL;
      put "    for (i = 0, j = 0; i < elems.length; i++)" NL;
      put "    {" NL;
      put "        var c = ' ' + elems[i].className + ' ';" NL;
      put "        if (c.indexOf(' ' + name + ' ') != -1)" NL;
      put "            retvalue[j++] = elems[i];" NL;
      put "    }" NL;
      put "    return retvalue;" NL;
      put "}" NL;
      put "" NL;
      put "document.getElementsByClassName = _getElementsByClassName;" NL;
      put "" NL;
      put "function setup() " NL;
      put "//" NL;
      put "// Onload event method to setup all initial parameters " NL;
      put "//" NL;
      put "{ " NL;
      put "    if ( initialized ) return;" NL;
      put "    if ( !document.getElementsByTagName('body')[0].hasAttribute('onload') )" NL;
      put "        expandAll(defaultlevel); " NL;
      put "}" NL;
      put "" NL;
      put "// Setup onload and onclick events" NL;
      put "if ( DOMsupport )" NL;
      put "{" NL;
      put "    if ( window.addEventListener )" NL;
      put "        window.addEventListener('load', setup, false);" NL;
      put "    else" NL;
      put "        window.onload = setup;" NL;
      put "}" NL;
   end;

   define event contents_head;
      start:

         trigger doc_head;

      finish:

         trigger contents_javascript;

         trigger doc_head;
   end;

49 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   define event contents_code_link;
      put "<script";
      putq " src=" code_name /if ^exists( code_url);
      putq " src=" code_url /if exists( code_url);
      put " language=""javascript"" type=""text/javascript"">";
      put "</script>" NL;
   end;

   define event top_head;
      start:
         put "<head>" NL;
         put VALUE NL;

      finish:
         put "</head>" NL;
   end;

   define event doc_title;
      put "<title>";
      put "SAS Output" /if ^exists( VALUE);
      put VALUE;
      put "</title>" NL;
   end;

   define event content_title;
      put "<title>";
      put "SAS Output" /if ^exists( VALUE);
      put VALUE;
      put "</title>" NL;
   end;

   define event doc_meta;
      put "<meta name=""Generator"" content=""SAS Software";
      set $generic getoption("generic");
      put " Version " SASVERSION /if cmp( $generic, "NOGENERIC");
      put ", see www.sas.com""";
      put $empty_tag_suffix;
      put ">" NL;

      trigger show_charset;
      put "<meta " VALUE $empty_tag_suffix ">" NL /if exists( value);
      break /if ^any( htmlcontenttype, encoding);
      break /if ^exists( htmlcontenttype) and  ^ exists ( $show_charset );
      put "<meta";
      put " http-equiv=""Content-type"" content=""";
      put HTMLCONTENTTYPE;
50 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put "; " /if exists( HTMLCONTENTTYPE, encoding, $show_charset);
      put "charset=" encoding /if exists( $show_charset);
      put """";
      put $empty_tag_suffix;
      put ">" NL;
   end;

   define event top_meta;
      put "<meta name=""Generator"" content=""SAS Software";
      set $generic getoption("generic");
      put " Version " SASVERSION /if cmp( $generic, "NOGENERIC");
      put ", see www.sas.com""";
      put $empty_tag_suffix;
      put ">" NL;

      trigger show_charset;
      put "<meta " VALUE $empty_tag_suffix ">" NL /if exists( value);
      break /if ^any( htmlcontenttype, encoding, $show_charset);
      put "<meta";
      put " http-equiv=""Content-Type"" content=""" /if any( HTMLCONTENTTYPE, encoding, $show_charset);
      put HTMLCONTENTTYPE;
      put "; " /if exists( HTMLCONTENTTYPE, encoding, $show_charset);
      put "charset=" encoding /if exists( $show_charset);
      put """";
      put $empty_tag_suffix;
      put ">" NL;
   end;

   define event ie_check;

      trigger javascript start;
      put "var _info = navigator.userAgent" NL;
      put "var _ie = (_info.indexOf(""MSIE"") > 0" NL;
      put %nrstr("          && _info.indexOf%(""Win""%) > 0") NL;
      put %nrstr("          && _info.indexOf%(""Windows 3.1""%) < 0%);") NL;
      set $ieCheckDone "true";

      trigger javascript finish;
   end;

   define event doc_body;
      put "<body onload=""startup()""";
         put " onunload=""shutdown()""";
         put " bgproperties=""fixed""" / WATERMARK;
         putq " background=" BACKGROUNDIMAGE;

51 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         trigger style_inline;
         put ">" NL;

         trigger pre_post;
         put NL;

         trigger ie_check;

      finish:

         trigger pre_post;
         put "</body>" NL;
   end;

   define event doc_foot;
      start:
         put "<foot>" NL;

      finish:
         put "</foot>" NL;
   end;

   define event startup_function;
      start:
         put "function startup(){" NL NL;

      finish:
         put TAGATTR NL;
         put "}" NL;
   end;

   define event shutdown_function;
      start:
         put "function shutdown(){" NL NL;

      finish:
         put TAGATTR NL;
         put "}" NL;
   end;

   define event windowload;
      put VALUE NL;
   end;

   define event contents;
      start:
52 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         put HTMLDOCTYPE NL;
         put "<html>" NL;

      finish:
         put "</html>" NL;
   end;

   define event contents_body;
      start:
         put "<body";
         putq " class=" HTMLCLASS;

         trigger style_inline;
         put ">" NL;

      finish:
         put "</body>" NL;
   end;

   define event preformatted;
      start:
         put "<pre>";

      finish:
         put "</pre>";
   end;

   define event contents_title;
      put "<span";
      putq " class=" HTMLCLASS;
      put ">";
      put PREHTML NL;
      put PREIMAGE NL;
      put PRETEXT NL;
      put POSTIMAGE NL;
      put POSTTEXT NL;
      put POSTHTML NL;
      put "</span>";
   end;

   define event list;
      start:
         put "<";

         trigger list_tag;

53 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         trigger listclass;
         put ">" NL;

      finish:
         put "</";

         trigger list_tag;
         put ">" NL;
   end;

   define event listclass;
      break /if cmp( htmlclass, "contents");
      break /if cmp( htmlclass, "pages");
      putq " class=" HTMLCLASS;
   end;

   define event list_entry;
      start:
         put "<li";
         putq " class=" HTMLCLASS;
         put ">" NL;

         trigger do_link /if listentryanchor;

         trigger do_list_value /if ^listentryanchor;

      finish:
         put "</li>" NL;
   end;

   define event do_link;

      trigger hyperlink_value /if any( URL, ANCHOR);
      put VALUE /if ^any( URL, ANCHOR);
   end;

   define event do_list_value;
      put value;
   end;

   define event hyperlink_value;

      trigger hyperlink start;

      trigger hyperlink finish;
   end;
54 The SAS System                                                                            17:04 Wednesday, April 16, 2014


   define event hyperlink;
      start:
         break /if ^URL;
         put "<a href=""" URL;
         set $close_hyperlink "TRUE";
         put """";

         do /if cmp( dest_file, "contents");
            putq " target=" HREFTARGET /if frame_name;

         else;
            putq " target=" HREFTARGET;
         done;

         put ">";

         trigger preformatted start /if asis;
         put VALUE;

      finish:
         break /if ^$close_hyperlink;
         unset $close_hyperlink;

         trigger preformatted finish /if asis;
         put "</a>" NL;
   end;

   define event contents_list;
      start:
         put "<";

         trigger list_tag;

         trigger listclass;
         put ">" NL;

      finish:
         put "</";

         trigger list_tag;
         put ">" NL;
   end;

   define event contents_branch;
      start:
55 The SAS System                                                                            17:04 Wednesday, April 16, 2014


         trigger list_entry start;

         trigger list;

      finish:

         trigger list finish;

         trigger list_entry finish;
      file = CONTENTS;
   end;

   define event contents_leaf;

      trigger list_entry start;

      trigger list_entry finish;
      file = CONTENTS;
   end;

   define event pages_branch;
      start:

         trigger list_entry start;

         trigger Page_list;

      finish:

         trigger Page_list finish;

         trigger list_entry finish;
      file = PAGES;
   end;

   define event page_list;
      start:
         put "<";

         trigger list_tag;

         trigger listclass;
         put ">" NL;

      finish:
56 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         put "</";

         trigger list_tag;
         put ">" NL;
      style = PagesItem;
   end;

   define event list_tag;
      set $list_tag "ul";
      set $list_tag "ol" /if cmp( htmlclass, "contents");
      set $list_tag "ol" /if cmp( htmlclass, "pages");
      put $list_tag;
   end;

   define event page_anchor;
      start:
         put "<li";
         putq " class=" HTMLCLASS;
         put ">" NL;
         put "<a href=""";
         put body_name /if ^exists( body_url);
         put body_url;
         put "#" ANCHOR;
         put """";
         putq " target=""body"" ";
         put ">";
         put "Page " total_page_count;
         put "</a>" NL;

      finish:
         put "</li>" NL;
      file = PAGES;
   end;

   define event anchor;
      putq "<a name=" NAME "></a>" NL /if length(NAME);
   end;

   define event breakline;
      put "<br";
      put $empty_tag_suffix;
      put ">";
   end;

   define event splitline;
      put "<br";
57 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put $empty_tag_suffix;
      put ">";
   end;

   define event line;
      put "<hr";
      put $empty_tag_suffix;
      put ">";
   end;

   define event pagebreak;
      unset $no_pagebreak /breakif $no_pagebreak;

      do /if cmp( $pagebreak, "no");
         break;

      else /if cmp( $pagebreak, "yes");
         put PAGEBREAKHTML NL;

      else /if $pagebreak;
         put $pagebreak NL;
      done;

   end;

   define event map;
      start:
         put "<map";
         putq " name=" NAME ">" NL;

      finish:
         put "</map>" NL;
   end;

   define event map_area;
      start:
         put "<area";
         putq " shape=" shape;
         put " " value;
         put " href=""" /if any( url, htmlid);
         put url "#" htmlid;
         put """" /if any( url, htmlid);
         putq " target=" target;

      finish:
         put """" /if exists( $coord_started);
58 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         unset $coord_started;
         put $empty_tag_suffix;
         put ">" NL;
   end;

   define event map_coordinate;
      put " coords=""" /if ^exists( $coord_started);
      put "," /if exists( $coord_started);
      set $coord_started "true";
      put coordinate;
   end;

   define event embed_svg;
      put "<div";

      trigger alt_align;
      put ">" NL;
      put "<embed  name=""SVGEmbed""";
      put " wmode=""transparent""";
      set $outputwidth %nrstr("100%%");
      set $outputheight %nrstr("100%%");

      trigger graph_style_inline;
      put " src=""";
      put BASENAME /if ^exists( NOBASE);
      put URL;
      put """";
      put " type=""image/svg+xml""";
      put " pluginspage=""http://www.adobe.com/svg/viewer/install/""></embed>";
      put "</div>" NL;
      style = Graph;
      pure_style;
   end;

   define event image;

      trigger embed_svg /breakif cmp( device_type, "SVG");

      trigger embed_svg /breakif cmp( device_type, "SVGZ");
      put "<img";
      putq " alt=" alt;
      put " src=""";
      put BASENAME /if ^exists( NOBASE);
      put URL;
      put """";

59 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      trigger graph_style_inline;
      put " border=""0""";
      put " usemap=""#" @CLIENTMAP;
      put " usemap=""#" NAME /if ^exists( @CLIENTMAP);
      put """" /if any( @CLIENTMAP, NAME);
      putq " id=" HTMLID;

      trigger classalign;
      put $empty_tag_suffix;
      put ">" NL;
   end;

   define event paragraph;
      start:
         put "<div";
      putq " id=" HTMLID;

      trigger classalign;

      trigger style_inline;
      put ">";

      trigger pre_post start;
      put VALUE;
      put TEXT /if ^value;

      trigger pre_post finish;
      put "</div>" NL;
   end;

   define event table;
      start:
         put "<div";

         trigger alt_align;
         put ">" NL;

         trigger table_caption;
         put "<table";

         trigger style_inline;
         putq " id=" HTMLID;

         trigger do_borders;

         trigger table_summary;
60 The SAS System                                                                            17:04 Wednesday, April 16, 2014

         put ">" NL;

      finish:
         put "</table>" NL;
         put "</div>" NL;
   end;

   define event verbatim_container;
      start:
         put "<div";

         trigger alt_align;
         put ">" NL;

         trigger pre_post;

      finish:

         trigger pre_post;
         put "</div>" NL;
   end;

   define event verbatim;
      start:

         trigger preformatted;

      finish:

         trigger preformatted;
   end;

   define event verbatim_text;
      put value;
      put NL;
   end;

   define event table_caption;
      break /if ^$summary_as_caption;
      put "<span style=""caption"">";

      trigger build_summary;
      put "</span>" NL;
   end;

   define event build_summary_stream;
61 The SAS System                                                                            17:04 Wednesday, April 16, 2014


      open table_summary;

      trigger build_summary;
      close;
   end;

   define event clean_string;
      set $string tranwrd($string,"<",%nrstr("&lt;"));
      set $string tranwrd($string,">",%nrstr("&gt;"));
      set $string tranwrd($string,"""",%nrstr("&quot;"));
      set $string tranwrd($string,"'",%nrstr("&apos;"));
   end;

   define event build_summary;
      set $summary summary /if ^$summary;
      put $summary_attribute;
      put $summary_prefix;
      put $summary;

      do /if ^$summary;
         put "Procedure " proc_name ": ";

         do /if $clean_summary;
            set $string output_label;

            trigger clean_string;
            put $string;
            unset $string;

         else;
            put output_label;
         done;

         put output_name /if ^exist( output_label);
      done;


      do /if $summary_byvars;
         put ", By " /if $byvars;
         iterate $byvars;
         eval $count 0;

         do /while _name_;
            put ", " /if $count > 0;
            put _name_;
62 The SAS System                                                                            17:04 Wednesday, April 16, 2014

            put "=" _value_ /if $summary_byvals;
            next $byvars;
            eval $count $count +1;
         done;

      done;

   done;

   put $summary_suffix;
end;

define event table_summary;
   set $clean_summary "TRUE";
   put " summary=""";

   trigger build_summary;
   put """";
   unset $clean_summary;
end;

define event table_head;
   put "<thead>" NL;

   finish:
      put "</thead>" NL;
end;

define event table_body;
   put "<tbody>" NL;

   finish:
      put "</tbody>" NL;
end;

define event table_foot;
   put "<tfoot>" NL;

   finish:
      put "</tfoot>" NL;
end;

define event table_label;
   block breakline;

   finish:
63 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      unblock breakline;
end;

define event table_headers;
   block breakline;

   finish:
      unblock breakline;
end;

define event colgroup;
   put "<colgroup>" NL;

   finish:
      put "</colgroup>" NL;
end;

define event colspec_entry;
   put "<col";
   put $empty_tag_suffix;
   put ">" NL;
end;

define event row;
   put "<tr>" NL;

   finish:
      put "</tr>" NL;
end;

define event rowcol;
   putq " rowspan=" ROWSPAN;
   putq " colspan=" COLSPAN;

   trigger rowhead /breakif contains( HTMLCLASS, "RowHeader");

   trigger colhead /if contains( HTMLCLASS, "eader");
end;

define event rowhead;

   do /if exists( ROWSPAN);
      put " scope=""rowgroup""";

   else;
      put " scope=""row""";
64 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   done;

end;

define event colhead;

   do /if exists( COLSPAN);
      put " scope=""colgroup""";

   else;
      put " scope=""col""";
   done;

end;

define event align;

   trigger real_align start;

   trigger real_align finish;
end;

define event real_align;
   start:

      do /if ^any( just, vjust);
         put " class=""" /if htmlclass;
         break;
      done;

      set $vjust vjust;
      set $just just;
      set $just "r" /when cmp( "d", just);
      set $vjust "m" /when cmp( "c", vjust);
      put " class=""";
      put $just;
      put " " /if exists( $just, $vjust);
      put $vjust;
      unset $vjust;
      unset $just;

   finish:
      put """" /if any( just, vjust, htmlclass);
end;

define event classalign;
65 The SAS System                                                                            17:04 Wednesday, April 16, 2014


   trigger real_align start;
   put " " htmlclass;

   trigger real_align finish;
end;

define event header;
   start:
      put "<th";
      putq " id=" HTMLID;
      putq " headers=" headers /if $header_data_associations;

      trigger rowcol;

      trigger align;
      put " nowrap" /if no_wrap;
      put ">";

      trigger cell_value;

   finish:

      trigger cell_value;
      put "</th>" NL;
end;

define event data;
   start:
      put "<td";
      putq " id=" HTMLID;
      putq " headers=" headers /if $header_data_associations;

      trigger rowcol;

      trigger align;
      put " nowrap" /if no_wrap;
      put ">";

      trigger cell_value;

   finish:

      trigger cell_value;
      put "</td>" NL;
end;
66 The SAS System                                                                            17:04 Wednesday, April 16, 2014


define event data_note;
   start:

      trigger data;

   finish:

      trigger data;
end;

define event stacked_cell;
   start:
      put "<td class=""stacked_cell " htmlclass """>";
      put %nrstr("<table width=""100%%"" border=""0"" style=""border-width: 0px""");

      do /if ^$css_table;
         putq " cellpadding=" $parent_table_padding;
         putq " cellspacing=""0""";
      done;

      put ">" NL;

   finish:
      put "</table></td>" NL;
end;

define event stacked_value;
   start:
      put "<tr>" NL;

      trigger data;

   finish:

      trigger data;
      put "</tr>" NL;
end;

define event stacked_value_header;
   start:
      put "<tr>" NL;

      trigger header;

   finish:
67 The SAS System                                                                            17:04 Wednesday, April 16, 2014


      trigger header;
      put "</tr>" NL;
end;

define event cell_value;
   start:

      trigger preformatted /if asis;

      trigger hyperlink;

      do /if ^exists( URL);

         trigger do_header_dots;
         put value;
      done;


   finish:

      trigger hyperlink;

      trigger preformatted /if asis;
end;

define event cell_is_empty;
   put %nrstr("&nbsp;");
end;

define event alt_align;
   putq " align=" $just_lookup[just ];
end;

define event association;
   put "<div";

      trigger alt_align;
      put ">" NL;
      put "<table ";
      put " summary=""Page Layout""";

      trigger style_inline;
      put ">";
      put "<tr>" NL;

68 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   finish:
      put "</tr>" NL;
      put "</table>" NL;
      put "</div>" NL;
end;

define event assoc_end_got_capt;
   put "</td>";
end;

define event caption;
   put "<td";
      putq " id=" htmlid;
      putq " title=" flyover;

      trigger classalign;

      trigger style_inline;
      put ">";
      put TEXT;

   finish:
      put "</td>" NL;
      put "</tr><tr><td>" /if cmp( TYPE, "T");
      put "<td>" /if cmp( TYPE, "L");
end;

define event pre_post;
   start:
      put PREHTML;
      putq "<img alt="""" src=" PREIMAGE;
      put $empty_tag_suffix /if exists( PREIMAGE);
      put ">" /if exists( PREIMAGE);
      put PRETEXT;

   finish:
      put POSTTEXT;
      putq "<img alt="""" src=" POSTIMAGE;
      put $empty_tag_suffix /if exists( POSTIMAGE);
      put ">" /if exists( POSTIMAGE);
      put POSTHTML;
end;

define event proc;
   put "<div class=""branch"">" NL;

69 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   finish:
      put "</div>" NL;
end;

define event output;
   put "<div>" NL;

   finish:
      put "</div>" NL;
      put "<br";
      put $empty_tag_suffix;
      put ">" NL;
end;

define event align_output;
   put "<div ";

      trigger align;
      put ">" NL;

   finish:
      put "</div>" NL;
end;

define event byline;
   put "<h1";

   trigger align;
   put ">";
   put VALUE;
   put "</h1>" NL;
end;

define event proc_title;
   put "<h2";

   trigger align;
   put ">";
   put VALUE;
   put "</h2>" NL;
end;

define event span;
   start:

      trigger pre_post;
70 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      set $pre_post POSTTEXT;

      do /if postimage;
         set $pre_post $pre_post "<img alt="""" src=" """" POSTIMAGE """";
         set $pre_post $pre_post $empty_tag_suffix;
         set $pre_post $pre_post ">";
      done;

      set $pre_post $pre_post POSTHTML;
      put "<span";
      putq " title=" flyover;

      trigger classalign;

      trigger style_inline;
      put ">";

      do /if asis;
         set $span_asis "TRUE";

         trigger preformatted;
      done;


      trigger hyperlink;

      trigger do_value /if ^exists( URL);

   finish:

      trigger hyperlink;

      trigger preformatted /if $span_asis;
      unset $span_asis;
      put "</span>";
      put $pre_post;
      unset $pre_post;
end;

define event title_format_section;
   put "<span";

   trigger style_inline;
   put ">";

   trigger hyperlink_value;
71 The SAS System                                                                            17:04 Wednesday, April 16, 2014


   do /if ^exists( URL);

      trigger preformatted start /if asis;
      put VALUE;

      trigger preformatted finish /if asis;
   done;

   put "</span>";
end;

define event proc_title_group;

   finish:
      put "<p";
   put $empty_tag_suffix;
   put ">" NL;
end;

define event proc_note_group;
   start:
      put "<br";
      put $empty_tag_suffix;
      put ">" NL;
      put "<p";
      put $empty_tag_suffix;
      put ">" NL;

   finish:
      put "<p";
      put $empty_tag_suffix;
      put ">" NL;
end;

define event system_title;
   start:
      put "<h1";

      trigger align;
      put ">";
      put VALUE;
      break /if exists( value);
      put %nrstr("&nbsp;") /if exists( empty);

   finish:
72 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put "</h1>" NL;
end;

define event system_footer;
   start:
      put "<h1";

      trigger align;
      put ">";
      put VALUE;

   finish:
      put "</h1>" NL;
end;

define event note;
   put "<h3";

   trigger align;
   put ">";
   put VALUE;
   put "</h3>" NL;
end;

define event warning;
   put "<h3";

   trigger align;
   put ">";
   put VALUE;
   put "</h3>" NL;
end;

define event error;
   put "<h3";

   trigger align;
   put ">";
   put VALUE;
   put "</h3>" NL;
end;

define event fatal;
   put "<h3";

   trigger align;
73 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   put ">";
   put VALUE;
   put "</h3>" NL;
end;

define event branch;
   start:
      break /if hidden;

      trigger contents_branch;

   finish:
      break /if hidden;

      trigger contents_branch;
end;

define event proc_branch;
   start:
      break /if hidden;
      set $proc_name "true";

      trigger contents_branch;

      trigger pages_branch;
      unset $proc_name;

   finish:
      break /if hidden;
      set $proc_name "true";

      trigger contents_branch;

      trigger pages_branch;
      unset $proc_name;
end;

define event leaf;
   start:
      break /if hidden;

   trigger contents_leaf;
end;

define event java_graph;
   start:
74 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      put "<APPLET " NL;
      putq " ID=" ref_id NL;
      put " MAYSCRIPT" NL;

   finish:
      put "</APPLET> " NL;
end;

define event metacode_parameter;
   start:
      put "<PARAM NAME=""MetaCodes""";
      put " VALUE=""";

   finish:
      put " "">" NL;
end;

define event graph_actx_width;
   put " WIDTH=""" COLWIDTH "px""" NL /breakif ^cmp( COLWIDTH, "0");
   putq " WIDTH=" OUTPUTWIDTH NL /if exists( OUTPUTWIDTH);
   put " WIDTH=""640px""" NL /if ^exists( OUTPUTWIDTH);
   style = Graph;
   pure_style;
end;

define event graph_actx_height;
   put " HEIGHT=""" DEPTH "px""" NL /breakif ^cmp( DEPTH, "0");
   putq " HEIGHT=" OUTPUTHEIGHT NL /if exists( OUTPUTHEIGHT);
   put " HEIGHT=""480px""" NL /if ^exists( OUTPUTHEIGHT);
   style = Graph;
   pure_style;
end;

define event graph_border;
end;

define event super;
   start:
      put "<sup>";
   put VALUE;
   put "</sup>";
end;

define event sub;
   start:
      put "<sub>";
75 The SAS System                                                                            17:04 Wednesday, April 16, 2014

   put VALUE;
   put "</sub>";
end;

define event dagger;
   start:
      put %nrstr("&dagger;");
end;

define event nbspace;

   do /if value;
      break /if index(value, "-");
      eval $ncount inputn(value,"3.");

      do /if $ncount > 256;
         eval $ncount 256;
      done;


   else;
      eval $ncount 1;
   done;


   do /while $ncount;
      put %nrstr("&nbsp;");
      eval $ncount $ncount -1;
   done;

   unset $ncount;
end;

define event newline;
   unset $value;

   do /if value;
      break /if index(value, "-");
      eval $ncount inputn(value,"3.");

      do /if $ncount > 256;
         eval $ncount 256;
      done;


   else;
76 The SAS System                                                                            17:04 Wednesday, April 16, 2014

      eval $ncount 1;
   done;


   do /while $ncount;
      put "<br>" NL;
      eval $ncount $ncount -1;
   done;

   unset $ncount;
end;

define event raw;
   start:
      put value;
end;

define event dest;
   start:
      set $dests scan(VALUE,1,"]");
   set $argments scan(VALUE,2,"]");
   set $dests lowcase($dests);
   put $argments /if contains( $dests, "html");
end;

define event sigma;
   start:
      put %nrstr("&sigma;");
end;
endwellformed = ">";
beginwellformed = "<";
registered_tm = %nrstr("&reg;");
trademark = %nrstr("&trade;");
copyright = %nrstr("&copy;");
breaktext_length = 80;
breaktext_width = 40;
breaktext_ratio = 2.5000000000000000;
image_formats = "png,gif,jpg,svg,xml";
output_type = "html";
split = "<br>";
nobreakspace = %nrstr("&nbsp;");
stylesheet_mimetype = "text/css";
default_mimetype = "text/html";
mapsub = %nrstr("/&lt;/&gt;/&amp;/&#39;/&quot;/");
map = %nrstr("<>&'""");
parent = tagsets.cascading_stylesheet;
77 The SAS System                                                                            17:04 Wednesday, April 16, 2014

stacked_columns;
embedded_stylesheet;
ext_graph_instance;
has_layout_support;
end;
NOTE: Path 'Tagsets.Phtml' is in: SASHELP.TMPLMST.
84         run;
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.11 seconds
      cpu time            0.06 seconds
      

85         

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           4.88 seconds
      cpu time            0.51 seconds
      
